@ember-grid-color: #5B83AD;
@ember-grid-odd-row-color: #F1F0F0;
@ember-grid-background: rgba(240,240,240,.5);

.ember-grid {
	
  overflow-y: hidden;
  overflow-x: hidden;
  position: relative;

	.declarative {
		// always hide declarative components
		display:none;
	}

	// -------------- main layout

  .display {
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    display : -webkit-flex;
	  display:flex;
    -webkit-flex-direction:column;
	  flex-direction:column;
	  overflow:hidden;

	  .body {
      -webkit-flex-grow:1;
		  flex-grow:1;
		  position:relative;

		  .scroll-container {
		  	position: absolute;
		    left: 0px;
		    right: 0px;
		    top: 0px;
		    bottom: 0px;
		  }
	  }
  }
  // in native-scroll mode, body needs to reflect content width
  &.native-scroll .body .scroll-container {
    position: relative;
  }

  // -------------- borders

	border: 2px solid @ember-grid-color;

	.header, .body {
	  border-bottom: 1px solid @ember-grid-color;
	}

  .cell {
  	border-right: 1px solid @ember-grid-color;

  	&:last-child {
  		border-right-color: @ember-grid-color;
  	}
  }

  .row {
  	&.empty {
  	  .cell {
		    border: none;
	    }
  	}
  }

  // -------------- scrolling

  .scroll-container {
  	position:relative;
  	height: 100%;

	  .scrollable {
	    margin: 0;
	    padding: 0;
	    overflow: auto;
      position: absolute;
	    left: 0px;
	    top: 0px;
	    right: 0px;
	    bottom: 0px;
	  }
  }


  // In native scroll mode, make sizes of main sections inside
  // display take content width.
  &.native-scroll {
    .scrollable {
      position: relative;
    }
    .body, .header, .footer {
      width: -webkit-fit-content;
      width: -moz-fit-content;
      width: fit-content;
    }
    .body {
      overflow-y: auto;
    }
  }

  .body {
	
	  .scrollable {
	  	overflow-x: hidden;
	  }

	}

	.column-scroll-control {
    height: 1px;
	}
  &:not(.horizontal-scroll) .column-scroll-control {
    display: none;
  }

  &.native-scroll .display {
    overflow-x: auto;
  }

  // -------------- colours

  .body {

		background-color: @ember-grid-background;

	  .row {
		  .cell {
	      background-color: white;
		  	&.odd {
		  		background-color: @ember-grid-odd-row-color;
		  	}
		  }

		  &.empty {
		  	.cell {
		  		background-color: @ember-grid-background;
		  	}
		  }
		}
	}

  // -------------- the rest

	.footer, .body {
		.cell {
		  overflow: hidden;
		}
	}

	.header, .footer, .body {

	  font-size: 0px;
    white-space: nowrap;

	  .cell {
    	padding-left: 2px;
    	padding-right: 2px;
    	padding-top: 1px;
    	padding-bottom: 2px;
    	font-size: 14px;
      box-sizing: border-box;
      margin: 0;
    	display: inline-block;

    	.default {
    		&.left {
    			text-align: left;
    		}
    		&.center {
    			text-align: center;
    		}
    		&.right {
    			text-align: right;
    		}
    	}
	  }

	  .resize-handle {
	    position: absolute;
	    right: -5px;
	    top: 0px;
	    bottom: 0px;
	    width: 5px;
	    cursor: ew-resize;
	  }
    .cell:not(:last-of-type) .resize-handle {
      right: -5px;
    }
    .cell:last-of-type .resize-handle {
      right: 0px;
    }
	}

  .header {

    &.dragging {
	    cursor: ew-resize;
	  }
  }

	.header, .footer {

		.cell {
			position: relative;
		}

	}

	.body {

	  overflow-y: hidden;
	  overflow-x: hidden;

	  .row {

		  &.empty {

		  	padding:20px;

		  	.cell {
			    width: 100%;
			    text-align: center;
		  	}
		  }
	  }
	}

  .filler {
  	width: 1px;
  	height: 1px;
  }

}

// Use flex to render rows, rather than relying on inline block stacking
// in block mode.
//
// This is only needed in safari; seems to be harmless but unnecessary
// in mac chrome/firefox, but breaks some windows browsers -- so
// for now safari specific

@media screen and (min-color-index:0) and (-webkit-min-device-pixel-ratio:0){ 
  .ember-grid .body {
    .row {
      display: -webkit-flex;
      display: flex;
    }
    .cell {
      -webkit-flex: none;
      flex: none;
    }
  }
}
